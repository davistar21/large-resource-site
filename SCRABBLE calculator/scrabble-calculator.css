body{
    font-family: sans-serif;
    background-color: hsl(215, 78%, 75%);
    color: white;
}
p{
    display: inline-block;
    margin: 0;
}
.page-container{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 30px;
}
.interact, .result{
    grid-column: span 2;
}
.upper-history{
    grid-column: span 4;
}
.interact, .result{
    width: 50%;
    margin: auto;
    padding: 100px;
    border-radius: 30px;
    display: flex;
    flex-direction: column;
    gap: 30px;
    align-items: center;
    background-color: hsl(215, 76%, 27%);
}
label, input, button{
    color: hsl(215, 79%, 81%);
    font-size: 30px;
}
input{
    width: 80%;
    padding: 20px;
    background-color: transparent;
    text-align: center;
    border: none;
    border-bottom: 4px solid hsl(215, 98%, 48%);
}
input::placeholder{
    color: inherit;
    opacity: 0.7;
    text-align: center;
}
button{
    width: 30%;
    font-size: 25px;
    margin-top: 30px;
    padding: 7px;
    background-color: hsl(215, 100%, 27%);
    border: 1px solid hsl(215, 78%, 75%);
    border-radius: 30px;
}
:disabled{
    color: gray;
    border-color: gray;
}

.result{
    font-size: 30px;
    color: hsl(215, 78%, 75%);
    text-align: center;
    position: relative;
}
.letter-number-combo{
    display: inline-block;
    position: relative;
    margin: 10px 2px;
    background-color: hsl(215, 98%, 18%);
    border-radius: 3px;
    width: 35px;
    height: 50px;
    padding: 3px;
    text-align: center;
    cursor: pointer;
    transition: transform 0.5s ease, 0.15s;
}
.letter-number-combo:hover{
    transform: scale(1.08);
    background-color: hsl(215, 96%, 20%);
}
.letter-number-combo span{
    position: absolute;
    top: -4px;
    left: 65%;
    font-size: 12px;
}
/* .letter-number-combo span select{
    appearance: none;
    background: none;
    position: absolute;
    top: 0;
    width: 40px;
    height: 40px;
    opacity: 1;
    padding: 10px;
    border: 1px solid #ccc;
    background-color: #fff;
    font-size: 16px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    cursor: pointer;
} */
/* .letter-number-combo span select::-ms-expand{
    display: none;
} */
.select-letter-multiplier.active{
    opacity: 1;
}
.select-letter-multiplier.active button{
    width: 30px;
    height: 30px;
    font-size: 13px;
}
.double-letter{
    background-color: rgb(0, 221, 255);
    color: black;
}
.triple-letter{
    background-color: rgb(0, 34, 255);
}
.double-letter.active{
    transform: translateY(100%);
}
.triple-letter.active{
    transform: translateY(-100%);
}
.select-letter-multiplier{
    display: flex;
    position: absolute;
    top: -30%;
    left: 15%;
    opacity: 0;
    transition: opacity 0.3s;
}
.select-letter-multiplier button{
    width: 20px;
    height: 20px;
    font-size: 5px;
    position: absolute;
    opacity: 1;
    transform: translateY(0);
    transition: transform 0.3s ease-in-out, 0.3s;
    font-weight: bold;
    cursor: pointer;
}
.function-buttons{
    position: absolute;
    bottom: 190px;
    right: -209px;
}
.function-buttons button{
    width: 30px;
    height: 30px;
    border-radius: 50%;
    font-size: 2px;
    font-weight: 100;
    opacity: 0;
    position: absolute;
    top: 10px;
    left: 10px;
    cursor: pointer;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, 0.3s ease-in-out, color 0.15s;
}
.function-buttons button:hover{
    color: white;
}
.double-word{
    background-color: hsl(44, 100%, 27%);
}
.triple-word{
    background-color: hsl(0, 100%, 37%);
}

.event-word-button-holder{
    position: relative;
}
.event-word-button{
    z-index: 2;
    position: absolute;
    bottom: 120px;
    right: -250px;
    width: 30px;
    height: 30px;
    cursor: pointer;
    font-size: 15px;
    font-family: 'Times New Roman', Times, serif;
    background-color: transparent;
}
.double-word.active{
    opacity: 1;
    transform: translateX(-130%);
    width: 50px;
    height: 50px;
    border-radius: 3px;
    font-size: 10px;
    font-weight: 900;
}
.triple-word.active{
    opacity: 1;
    transform: translateX(-240%);
    width: 50px;
    height: 50px;
    border-radius: 3px;
    font-size: 10px;
    font-weight: 900;
}
.upper-history{
    background-color: hsl(215, 76%, 27%);
    width: 50%;
    padding: 100px;
    border-radius: 30px;
    margin: auto;
    position: relative;
    font-size: 20px;
    color: hsl(215, 78%, 75%);
    min-height: 200px;
}
.history{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 30px;
    justify-items: left;
}
.history-object-items{
    background-color: hsl(215, 98%, 18%);
    padding: 10px;
}
.clear-history{
    position: absolute;
    top: 10px;
    right: 20px;
    padding: 10px;
    width: 50px;
    height: auto;
    border-radius: 50%;
}
@keyframes fadeOut {
    0% {
        opacity: 1;
        transform: scaleX(1);
    }
    50% {
        opacity: 1;
        transform: scaleX(1);
    } 
    100% {
        opacity: 0;
        transform: scaleX(0.5);
    }
}
.fade-out{
    animation: fadeOut 2s;
}

/*start responsive designing*/

@media (max-width: 1000px) {
    body, input, label, button, p, span, div{
        font-size: 20px;
    }
    body{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .page-container{
        display: flex;
        flex-direction: column;
    }
    .history{
        grid-template-columns: 1fr 1fr;
    }
}
@media (max-width: 750px) {
    .history{
        grid-template-columns: 1fr;
        justify-items: center;
    }
}

@property --angle{
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }
  .result::after, .result::before{
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    background-image: conic-gradient(from var(--angle),  rgb(3, 31, 108), transparent,  rgb(3, 31, 108));
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    z-index: -1;
    padding: 10px;
    border-radius: inherit;
    animation: 3s spin linear infinite;
  }
  @keyframes spin {
    from{
      --angle: 0deg;
    } to {
      --angle: 360deg;
    }
  }
  .result::before, .result::after{
    filter: blur(1.5rem);
    opacity: 0.7;
  }